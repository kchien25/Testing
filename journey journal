
<<<2/21/18>>>

why did i choose to change my career path? well, that's easy. actually, looking back, it 
was easy but when i was making the decision, it was pretty damn hard. i really thought 
about it for days, weeks, months, and it just really clicked for me when i realized that 
i never went out of my way to self study things related to biology or medicine or 
anything like that but taking online courses on computer science was just genuinely fun 
and interesting to me. even watching a couple videos on SQL and unix command lines were 
pretty fun for me although i'm learning those things quite casually when compared to the 
other courses that i'm taking online. i really just think that everything about this 
subject is endlessly interesting while biology... was actually my least favorite science 
in college. my favorite science was organic chemistry followed by general chemistry. i 
would have gone into chemistry rather than biology back then but at that time, i hated 
math. i actually like math a lot more now after taking calc 1 and calc 2.

also, i just wanted to say that i installed eclipse, apache maven, made code runner work 
on vscode yesterday and the day before and that was so frustrating. maven was so 
frustrating. thank goodness for homebrew.

i discovered codewars today! it's pretty fun! they're like little challenges. my python 
skillz have deteriorated though i'm learning a lot from the solutions that are on there! 
i didn't even know replace and filter was a thing. also, i changed my profile picture on 
github because i was told that professional people would actually be looking at them so 
using a picture of the guy from america's next top model isn't good. 

p.s. i should learn what agile is
p.p.s. it's a software development method that lets you update in small bunches rather 
than a huge shabang all at once

<<<2/22/18>>>

today was a pretty great day! dr. leader connected me with the development team at 
jefferson and they're going to let me shadow some of the team members there. they work on 
applications, patient portals, websites, and much more. i feel like this would be really 
helpful with determining what direction i want to go with programming and if software 
development really is where my passion lies. i'm excited!!

also, i've started watching the webcasts from berkeley and stanford and i guess for now 
i'll focus on that and maybe put the websites as a low priority because web development 
isn't really what i WANT to do anyway though javascript is a very useful language 
nonetheless. i just find python cleaner, easier to use, and easier to keep my thoughts in 
order. i suppose using more comments on javascript would help level the playing field, 
though.

<<<2/23/18>>>

i really need to stop getting myself involved in additional things that i don't have 
time for. i'm not superwoman or anyting so clearly i won't be able to handle things at 
the speed of a bullet. being a full time master's student while trying to study computer 
science is so hard but still pretty rewarding. i recently realized that i barely spend 
any time on time-wasting stuff because sometimes learning about programming feels as fun 
as the time-wasting stuff i used to do. nonetheless, trying to take 4 computer science 
classes at the same time while also taking 6 in-class public health classes concurrently 
is waaaayyyyy more than i can reasonably handle. especially since the node.js course 
recommends that i already have a set of webpages built so i can just focus on the 
back-end stuff. i tried looking for some webpages that were already built up and, 
granted, i didn't spend a lot of time actually looking but it seemed kind of boring so i 
decided to move ahead one course for the microsoft recommended entry level software 
developer series and start on java, instead. naturally, i'll still make my way back 
because node.js is a very practical and useful thing to know about.

<<<2/27/18>>>

today i got to go see the development team at jefferson! it was really cool. in class, 
the guest speaker was talking about how health professionals could help change the 
world and blahdeeblah and it started me thinking that maybe i made the wrong choice. i 
mean, i'm not that well versed in software development. what made me think that this 
field would suit me better than medicine, which was the field that i've been studying 
for since i was like 14 years old? but when i got to visit jefferson's development team 
and just watching developers sit around a table and brainstorm and work on their project 
really had me feeling excited! and talking to the head of the development team about how 
someone goes to him with a problem saying that they need a technological solution for 
certain things and then the manager and the team being given leeway to solve the problem 
discussed in whichever way they thought was best... that made my mind start zipping 
crazily thinking about everything i could have done if the head of a health department 
came to me with a problem that technology could solve. critical thinking in software 
development really doesn't stop at just figuring out the best ways to write the code, it 
goes so much more beyond that and that makes me so excited. i can't wait until the day 
when i can decide where i want to take a project, see my project come to life, and see 
the impact it can make at bettering someone's life by making things so much more 
convenient for them. this really is the field i want to go in. i just wish i could've 
realized that 10 years ago. work really doesn't have to be work. there really is such 
thing as loving your work so much so that it doesn't even feel like work!! although i 
suppose i wouldn't like it if i was given a project i wasn't too passionate about though 
i would do it, of course.

p.s. i still haven't gotten a really concrete answer from anybody whether a master's in 
computer science was worth reaching for or not. hopefully i can get that answered soon. 
and if it's worth the time, whether there would be companies that would allow me to do 
that master's part time while working.

<<<3/2/18>>>

man, these days i've been really focusing my time on the microsoft software developer 
series because it's very intuitive and holds your hand through a lot of the concepts but 
i really just want to get back to focusing on the berkeley courses because they're so 
much more challenging and make me think harder. i'm not sure why but i find that just so 
much more fun though i'm aware that it's more useful to know the basics first before 
diving deep and i want to at least finish up the object oriented programming in java and 
algorithms and data structures thing before moving into berkeley's version 'cause i know 
it's gonna make me feel like i'm the stupidest person in the world. i can't wait until i 
have a good foundation of knowledge and i can actually start getting into projects 
and figuring out problems and watching the projects i work on come to life! i should 
probably learn swift 'cause i really want to make this menubar app and it would probably 
come into handy having this knowledge later down the line. but yeah, i'm so impatient! 
i wish i was done with this mph already so i can really focus on what i'm really 
interested in!! and i want to get reacquainted with math, too. instead of spending 70% 
of my time on my mph work and 30% on computer stuff i want to spend 70% on computer 
stuff and 30% on math and cryptography stuff. i can't wait until i graduate from this 
program.

i know i'm probably just being too careful about things and i could just start my 
projects now but i just don't feel comfortable doing that for some reason. i should 
learn to go out of my comfort zone but i'm sure there'll be enough of that when i'm 
working my first few software dev jobs so for now i'll just do what i enjoy and am at 
least somewhat comfortable doing.

<<<3/8/18>>>

i don't know why but today i was working on the first project in the object oriented 
programming thing (which was definitely a jump in self-learning because the previous course 
pretty much held your hand through everything) and being able to refactor my code and shorten 
it by 20 lines was pretty great! and being able to figure out the 2d array was awesome. i'm 
starting to feel a little challenge now and it's definitely both frustrating and rewarding!!

<<<3/12/18>>>

SO. i recently started learning object oriented programming in java (which is like a step 
above the other stuff i've been learning in terms of brain power needed) and i was doing the 
project right after learning about public and private and static and non-static and i was 
trying to get this stupid fraction class thing to work because i needed to return a fraction 
for a method but i didn't know how to do that?!??! so then i google around for a way to do it 
and, naturally, i end up on stack overflow to see how people were doing it and apparently 
there's a "RETURN THIS"?!?!?!?!? LIKE YOU CAN JUST RETURN THIS? JUST THIS?!?? WHAT?!??! it 
blew my mind. it totally blew my mind. i was dying trying to figure out how to return 
something in my fraction form like what, even, is my fraction form? i have a numerator and 
denominator field but how do i return a FRACTION?!?! WHAT TYPE EVEN IS THE FRACTION!? I DIDNT 
DECLARE A TYPE IN MY FRACTION CLASS OK!?!?! unless class is the type. is class a type? oh 
dang, class is a type. TIL. well, actually, i think i learned that before but i just wanted to 
say that the 'return this' blew my mind. microsoft should have gone over that a little better 
in their online course. but still thank you for this opportunity to learn, microsoft. but 
yeah, object oriented programming was so complicated as i was reading about it for the first 
time but now that i'm actually putting it into practice, things are starting to make more and 
more sense. computer science is still great. public health is still boring. ok, maybe not 
totally boring but just boring in comparison to programming. for me. ymmv and all.